# ==========================================
# Fastify OAuth API - Environment Variables
# ==========================================

# ==========================================
# APPLICATION
# ==========================================
NODE_ENV=development
PORT=1337
HOST=0.0.0.0
API_VERSION=v1

# Node.js memory limit (for Raspberry Pi 4B with SSD: 512MB heap limit)
# Uncomment to enable:
# NODE_OPTIONS=--max-old-space-size=512

# ==========================================
# DOCKER CONFIGURATION
# ==========================================
# Container names (used in docker-compose.yml)
CONTAINER_POSTGRES_NAME=fastify-oauth-postgres
CONTAINER_REDIS_NAME=fastify-oauth-redis
CONTAINER_API_NAME=fastify-oauth-api
CONTAINER_CADDY_NAME=fastify-oauth-caddy

# Docker network
DOCKER_NETWORK_NAME=api-network

# Docker versions
POSTGRES_VERSION=15-alpine
REDIS_VERSION=7-alpine
NODE_VERSION=22-alpine
CADDY_VERSION=2-alpine

# Build target (development or production)
BUILD_TARGET=production

# ==========================================
# DATABASE (PostgreSQL)
# ==========================================
DATABASE_HOST=postgres
DATABASE_PORT=5432
DATABASE_USER=postgres
DATABASE_PASSWORD=postgres_change_me_in_production
DATABASE_NAME=fastify_oauth_db

# SSL settings
DATABASE_SSL=false

# Connection pool
DATABASE_POOL_MIN=2
DATABASE_POOL_MAX=10

# ==========================================
# REDIS
# ==========================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_KEY_PREFIX=fastify:

# TTL settings (in seconds)
REDIS_CACHE_TTL=300
REDIS_SESSION_TTL=3600

# ==========================================
# JWT CONFIGURATION
# ==========================================
# CRITICAL: Generate a strong random secret for production!
# Use: openssl rand -base64 32
JWT_SECRET=your-super-secret-jwt-key-change-me-in-production

# Token expiration
JWT_ACCESS_TOKEN_EXPIRES_IN=15m
JWT_REFRESH_TOKEN_EXPIRES_IN=7d

# Issuer and audience
JWT_ISSUER=fastify-oauth-api
JWT_AUDIENCE=fastify-oauth-api

# Algorithm (HS256, HS384, HS512, RS256, etc.)
JWT_ALGORITHM=HS256

# ==========================================
# ADMIN CONFIGURATION
# ==========================================
# Primary admin email (auto-promoted on OAuth login)
ADMIN_EMAIL=admin@example.com

# Additional admin emails (comma-separated)
# These users will be auto-promoted to admin role on login
ADMIN_EMAILS_ADDITIONAL=admin2@example.com,admin3@example.com

# Super Admin email (auto-promoted to superadmin role on first OAuth login)
# Leave empty to disable auto-promotion
SUPER_ADMIN_EMAIL=

# ==========================================
# API KEYS (Admin Panel)
# ==========================================
# Admin panel API key (used by frontend)
# Generate initial key with: npm run db:seed:superadmin
# CRITICAL: Store securely! Authenticates admin panel API requests.
ADMIN_PANEL_API_KEY=generate-with-npm-run-db:seed:superadmin

# NOTE: Mobile app API keys (iOS/Android) are managed through the admin panel
# and stored in the database. 1 active key per platform is allowed.

# ==========================================
# GOOGLE OAUTH
# ==========================================
# Get credentials from: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# Redirect URI for web (must be registered in Google Console)
# For admin panel: http://localhost:3000/admin/auth/callback (dev) or https://yourdomain.com/admin/auth/callback (prod)
GOOGLE_REDIRECT_URI=http://localhost:3000/admin/auth/callback

# Redirect URI for mobile apps (custom URL scheme or Universal Links)
# Format: myapp://oauth/callback OR https://yourdomain.com/oauth/google
GOOGLE_REDIRECT_URI_MOBILE=myapp://oauth/callback

# Scopes (space-separated)
GOOGLE_SCOPES=openid email profile

# ==========================================
# APPLE SIGN-IN
# ==========================================
# Get credentials from: https://developer.apple.com/account/resources/identifiers/list/serviceId
APPLE_CLIENT_ID=com.yourcompany.yourapp.signin
APPLE_TEAM_ID=YOUR_TEAM_ID
APPLE_KEY_ID=YOUR_KEY_ID

# Path to Apple private key (.p8 file)
APPLE_PRIVATE_KEY_PATH=./keys/apple-private-key.p8

# Redirect URI for web (must be registered in Apple Developer Portal)
APPLE_REDIRECT_URI=http://localhost:3000/api/auth/apple/callback

# Redirect URI for mobile apps (custom URL scheme or Universal Links)
# Format: myapp://oauth/callback OR https://yourdomain.com/oauth/apple
APPLE_REDIRECT_URI_MOBILE=myapp://oauth/callback

# Scopes (space-separated)
APPLE_SCOPES=name email

# ==========================================
# CADDY REVERSE PROXY
# ==========================================
# Domain (use 'localhost' for development)
CADDY_DOMAIN=localhost

# Email for Let's Encrypt notifications
CADDY_EMAIL=admin@example.com

# ACME CA (Certificate Authority)
# Development (staging): https://acme-staging-v02.api.letsencrypt.org/directory
# Production: https://acme-v02.api.letsencrypt.org/directory
CADDY_ACME_CA=https://acme-staging-v02.api.letsencrypt.org/directory

# API backend (for reverse proxy)
API_HOST=api
API_PORT=1337

# ==========================================
# LOGGING
# ==========================================
# Log level: trace, debug, info, warn, error, fatal
LOG_LEVEL=info

# Pretty print logs (true for development, false for production)
LOG_PRETTY_PRINT=true

# ==========================================
# CORS CONFIGURATION
# ==========================================
# Allowed origins (comma-separated)
# Example: http://localhost:3000,https://yourdomain.com
CORS_ORIGIN=*

# Allowed methods
CORS_METHODS=GET,POST,PUT,PATCH,DELETE,OPTIONS

# Allow credentials
CORS_CREDENTIALS=true

# ==========================================
# RATE LIMITING
# ==========================================
# Maximum requests per time window
RATE_LIMIT_MAX=100

# Time window in milliseconds (60000 = 1 minute)
RATE_LIMIT_WINDOW=60000

# Ban duration in milliseconds (if enabled)
RATE_LIMIT_BAN=0

# ==========================================
# SESSION CONFIGURATION
# ==========================================
SESSION_SECRET=your-super-secret-session-key-change-me-in-production
SESSION_COOKIE_NAME=fastify_oauth_session
SESSION_MAX_AGE=604800000

# ==========================================
# SECURITY
# ==========================================
# Enable HTTPS redirect (only in production with Caddy)
HTTPS_REDIRECT=false

# Enable HSTS (HTTP Strict Transport Security)
HSTS_ENABLED=true
HSTS_MAX_AGE=31536000

# ==========================================
# SWAGGER DOCUMENTATION
# ==========================================
# Enable Swagger UI
SWAGGER_ENABLED=true

# Swagger route path
SWAGGER_ROUTE=/documentation

# ==========================================
# PRODUCTION DEPLOYMENT CHECKLIST
# ==========================================
# Before deploying to production, ensure:
# 1. ✓ NODE_ENV=production
# 2. ✓ Strong JWT_SECRET (min 32 chars random)
# 3. ✓ Strong DATABASE_PASSWORD (min 16 chars random)
# 4. ✓ Strong SESSION_SECRET (min 32 chars random)
# 5. ✓ REDIS_PASSWORD set (if exposed)
# 6. ✓ Real domain in CADDY_DOMAIN
# 7. ✓ Production Let's Encrypt in CADDY_ACME_CA
# 8. ✓ Valid email in CADDY_EMAIL
# 9. ✓ OAuth credentials for production environment
# 10. ✓ LOG_PRETTY_PRINT=false
# 11. ✓ CORS_ORIGIN with specific domains (not *)
# 12. ✓ DATABASE_SSL=true (if applicable)
# 13. ✓ All secrets stored in secret manager (not .env file)
