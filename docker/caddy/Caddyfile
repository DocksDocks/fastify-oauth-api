# Caddyfile for Fastify OAuth API
# Reverse proxy with automatic HTTPS

{
    # Global options
    email {$CADDY_EMAIL:admin@example.com}

    # ACME CA (use staging for development, production for prod)
    # Development (staging): https://acme-staging-v02.api.letsencrypt.org/directory
    # Production: https://acme-v02.api.letsencrypt.org/directory
    acme_ca {$CADDY_ACME_CA:https://acme-staging-v02.api.letsencrypt.org/directory}

    # Admin API
    admin off

    # Logging
    log {
        output stdout
        format json
        level INFO
    }
}

# Main site
{$CADDY_DOMAIN:localhost} {
    # Logging for this site
    log {
        output stdout
        format json
        level INFO
    }

    # Security headers
    header {
        # Enable HSTS
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

        # Prevent MIME type sniffing
        X-Content-Type-Options "nosniff"

        # Clickjacking protection
        X-Frame-Options "DENY"

        # XSS protection
        X-XSS-Protection "1; mode=block"

        # Referrer policy
        Referrer-Policy "strict-origin-when-cross-origin"

        # Permissions policy
        Permissions-Policy "geolocation=(), microphone=(), camera=()"

        # Remove server header
        -Server

        # Remove X-Powered-By
        -X-Powered-By
    }

    # Enable gzip compression
    encode gzip zstd

    # Health check endpoint (pass through)
    handle /health {
        reverse_proxy {$API_HOST:api}:{$API_PORT:3000} {
            health_uri /health
            health_interval 10s
            health_timeout 5s
        }
    }

    # API endpoints
    handle /api/* {
        reverse_proxy {$API_HOST:api}:{$API_PORT:3000} {
            # Load balancing (for future use)
            lb_policy round_robin

            # Health check
            health_uri /health
            health_interval 10s
            health_timeout 5s
            health_status 200

            # Timeouts
            transport http {
                dial_timeout 10s
                response_header_timeout 30s
                read_timeout 60s
                write_timeout 60s
            }

            # Headers
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up X-Forwarded-Host {host}
        }
    }

    # Documentation endpoint
    handle /documentation* {
        reverse_proxy {$API_HOST:api}:{$API_PORT:3000} {
            health_uri /health
            health_interval 10s
            health_timeout 5s
        }
    }

    # Root endpoint
    handle / {
        reverse_proxy {$API_HOST:api}:{$API_PORT:3000} {
            health_uri /health
            health_interval 10s
            health_timeout 5s
        }
    }

    # Catch-all for other paths
    handle {
        reverse_proxy {$API_HOST:api}:{$API_PORT:3000} {
            health_uri /health
            health_interval 10s
            health_timeout 5s
        }
    }

    # Error handling
    handle_errors {
        respond "{err.status_code} {err.status_text}"
    }
}

# Metrics endpoint (optional, for monitoring)
:2019 {
    metrics /metrics
}
